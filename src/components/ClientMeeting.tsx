import React, { useState } from "react";

interface ClientMeetingProps {
  onAnswer: (isCorrect: boolean, points: number, questionType: string) => void;
  onBack: () => void;
}

interface ClientScenario {
  id: number;
  scenario: string;
  scenarioRu: string;
  options: string[];
  correctAnswer: string;
  explanation: string;
  explanationRu: string;
  points: number;
}

const ClientMeeting: React.FC<ClientMeetingProps> = ({ onAnswer, onBack }) => {
  const [currentScenarioIndex, setCurrentScenarioIndex] = useState(0);
  const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);
  const [showExplanation, setShowExplanation] = useState(false);
  const [showRu, setShowRu] = useState(false);
  const [meetingComplete, setMeetingComplete] = useState(false);

  const scenarios: ClientScenario[] = [
    {
      id: 1,
      scenario: "Client: ‚ÄúHave you prepared the contract?‚Äù",
      scenarioRu: "–ö–ª–∏–µ–Ω—Ç: ¬´–í—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç?¬ª",
      options: [
        "Yes, we have prepared the contract.",
        "Yes, we prepare it yesterday.",
        "We was preparing it.",
        "Not ready."
      ],
      correctAnswer: "Yes, we have prepared the contract.",
      explanation: "Present Perfect ‚Äî —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–∂–µ–Ω —Å–µ–π—á–∞—Å.",
      explanationRu: "–î–∞, –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç.",
      points: 15
    },
    {
      id: 2,
      scenario: "Client: ‚ÄúWhy were you not at the meeting yesterday?‚Äù",
      scenarioRu: "–ö–ª–∏–µ–Ω—Ç: ¬´–ü–æ—á–µ–º—É –≤–∞—Å –Ω–µ –±—ã–ª–æ –Ω–∞ –≤—Å—Ç—Ä–µ—á–µ –≤—á–µ—Ä–∞?¬ª",
      options: [
        "I was attending training.",
        "I attend training.",
        "I was attend training.",
        "Never go."
      ],
      correctAnswer: "I was attending training.",
      explanation: "Past Continuous ‚Äî –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –ø—Ä–æ—à–ª–æ–º.",
      explanationRu: "–Ø –±—ã–ª –Ω–∞ —Ç—Ä–µ–Ω–∏–Ω–≥–µ.",
      points: 15
    },
    {
      id: 3,
      scenario: "Client: ‚ÄúWhen will you deliver the products?‚Äù",
      scenarioRu: "–ö–ª–∏–µ–Ω—Ç: ¬´–ö–æ–≥–¥–∞ –≤—ã –¥–æ—Å—Ç–∞–≤–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã?¬ª",
      options: [
        "We will deliver them next Monday.",
        "We deliver yesterday.",
        "We was delivering.",
        "Not sure."
      ],
      correctAnswer: "We will deliver them next Monday.",
      explanation: "Future Simple ‚Äî –æ–±–µ—â–∞–Ω–∏–µ/–ø–ª–∞–Ω.",
      explanationRu: "–ú—ã –¥–æ—Å—Ç–∞–≤–∏–º –∏—Ö –≤ —Å–ª–µ–¥—É—é—â–∏–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫.",
      points: 15
    },
    {
      id: 4,
      scenario: "Client: ‚ÄúThe deadline is very close. Can you finish?‚Äù",
      scenarioRu: "–ö–ª–∏–µ–Ω—Ç: ¬´–î–µ–¥–ª–∞–π–Ω –æ—á–µ–Ω—å –±–ª–∏–∑–∫–æ. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–æ–Ω—á–∏—Ç—å?¬ª",
      options: [
        "Yes, we can finish by the deadline.",
        "We was finish it.",
        "We finished yesterday.",
        "Not possible."
      ],
      correctAnswer: "Yes, we can finish by the deadline.",
      explanation: "Can ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, –æ–±–µ—â–∞–Ω–∏–µ –≤–æ–≤—Ä–µ–º—è.",
      explanationRu: "–î–∞, –º—ã —Å–º–æ–∂–µ–º –∑–∞–∫–æ–Ω—á–∏—Ç—å –∫ –¥–µ–¥–ª–∞–π–Ω—É.",
      points: 15
    },
    {
      id: 5,
      scenario: "Client: ‚ÄúWhy has the price increased?‚Äù",
      scenarioRu: "–ö–ª–∏–µ–Ω—Ç: ¬´–ü–æ—á–µ–º—É —Ü–µ–Ω–∞ –ø–æ–≤—ã—Å–∏–ª–∞—Å—å?¬ª",
      options: [
        "Because the costs have increased.",
        "Because costs was increase.",
        "Because costs increase yesterday.",
        "Not important."
      ],
      correctAnswer: "Because the costs have increased.",
      explanation: "Present Perfect –æ–±—ä—è—Å–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é —Å–∏—Ç—É–∞—Ü–∏—é.",
      explanationRu: "–ü–æ—Ç–æ–º—É —á—Ç–æ —Ä–∞—Å—Ö–æ–¥—ã –≤—ã—Ä–æ—Å–ª–∏.",
      points: 15
    },
    {
      id: 6,
      scenario: "Client: ‚ÄúDid you use to work with international companies?‚Äù",
      scenarioRu: "–ö–ª–∏–µ–Ω—Ç: ¬´–í—ã —Ä–∞–Ω—å—à–µ —Ä–∞–±–æ—Ç–∞–ª–∏ —Å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º–∏ –∫–æ–º–ø–∞–Ω–∏—è–º–∏?¬ª",
      options: [
        "Yes, we used to work with them.",
        "Yes, we use to work.",
        "We was working.",
        "Never work."
      ],
      correctAnswer: "Yes, we used to work with them.",
      explanation: "Used to ‚Äî –ø—Ä–∏–≤—ã—á–∫–∞/—Ñ–∞–∫—Ç –≤ –ø—Ä–æ—à–ª–æ–º.",
      explanationRu: "–î–∞, –º—ã —Ä–∞–Ω—å—à–µ —Ä–∞–±–æ—Ç–∞–ª–∏ —Å –Ω–∏–º–∏.",
      points: 15
    },
    {
      id: 7,
      scenario: "Client: ‚ÄúCan you show me the market analysis?‚Äù",
      scenarioRu: "–ö–ª–∏–µ–Ω—Ç: ¬´–ú–æ–∂–µ—Ç–µ –ø–æ–∫–∞–∑–∞—Ç—å –∞–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞?¬ª",
      options: [
        "Yes, here is the analysis.",
        "We was analyze it.",
        "We analyze yesterday.",
        "Not have."
      ],
      correctAnswer: "Yes, here is the analysis.",
      explanation: "–ö–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–∏—Ç –¥–æ–∫—É–º–µ–Ω—Ç ‚Üí –¥–∞—Ç—å –≤–µ–∂–ª–∏–≤—ã–π –æ—Ç–≤–µ—Ç.",
      explanationRu: "–î–∞, –≤–æ—Ç –∞–Ω–∞–ª–∏–∑.",
      points: 15
    },
    {
      id: 8,
      scenario: "Client: ‚ÄúI‚Äôm not happy with customer service.‚Äù",
      scenarioRu: "–ö–ª–∏–µ–Ω—Ç: ¬´–Ø –Ω–µ–¥–æ–≤–æ–ª–µ–Ω –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ–º.¬ª",
      options: [
        "I‚Äôm sorry. We will improve the service.",
        "That‚Äôs your problem.",
        "Not care.",
        "Later."
      ],
      correctAnswer: "I‚Äôm sorry. We will improve the service.",
      explanation: "–í–µ–∂–ª–∏–≤–æ–µ –∏–∑–≤–∏–Ω–µ–Ω–∏–µ + Future Simple –¥–ª—è –æ–±–µ—â–∞–Ω–∏—è.",
      explanationRu: "–ò–∑–≤–∏–Ω–∏—Ç–µ. –ú—ã —É–ª—É—á—à–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ.",
      points: 20
    },
    {
      id: 9,
      scenario: "Client: ‚ÄúWhat is your plan for development?‚Äù",
      scenarioRu: "–ö–ª–∏–µ–Ω—Ç: ¬´–ö–∞–∫–æ–≤ –≤–∞—à –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è?¬ª",
      options: [
        "Our strategy is to invest in new technology.",
        "We was invest in new tech.",
        "We invest yesterday.",
        "No plan."
      ],
      correctAnswer: "Our strategy is to invest in new technology.",
      explanation: "–ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–µ–∫—Å–∏–∫—É strategy/invest.",
      explanationRu: "–ù–∞—à–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è ‚Äî –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.",
      points: 20
    },
    {
      id: 10,
      scenario: "Client: ‚ÄúHave you improved the training program?‚Äù",
      scenarioRu: "–ö–ª–∏–µ–Ω—Ç: ¬´–í—ã —É–ª—É—á—à–∏–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É –æ–±—É—á–µ–Ω–∏—è?¬ª",
      options: [
        "Yes, we have improved the program.",
        "We was improve it.",
        "We improve yesterday.",
        "Not improved."
      ],
      correctAnswer: "Yes, we have improved the program.",
      explanation: "Present Perfect ‚Äî —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É–ª—É—á—à–µ–Ω–∏—è.",
      explanationRu: "–î–∞, –º—ã —É–ª—É—á—à–∏–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É.",
      points: 15
    },
    {
      id: 11,
      scenario: "Client: ‚ÄúWhen will you send the survey results?‚Äù",
      scenarioRu: "–ö–ª–∏–µ–Ω—Ç: ¬´–ö–æ–≥–¥–∞ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ä–æ—Å–∞?¬ª",
      options: [
        "We will send them tomorrow.",
        "We was send them.",
        "We send yesterday.",
        "Never."
      ],
      correctAnswer: "We will send them tomorrow.",
      explanation: "Future Simple ‚Äî –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–ª–∞–Ω.",
      explanationRu: "–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–º –∏—Ö –∑–∞–≤—Ç—Ä–∞.",
      points: 15
    },
    {
      id: 12,
      scenario: "Client: ‚ÄúThe profit has grown. What is your opinion?‚Äù",
      scenarioRu: "–ö–ª–∏–µ–Ω—Ç: ¬´–ü—Ä–∏–±—ã–ª—å –≤—ã—Ä–æ—Å–ª–∞. –ö–∞–∫–æ–≤–æ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ?¬ª",
      options: [
        "That‚Äôs great. It will help development.",
        "Profit was grow.",
        "We was growing.",
        "Not know."
      ],
      correctAnswer: "That‚Äôs great. It will help development.",
      explanation: "Present Perfect (—Ä–µ–∑—É–ª—å—Ç–∞—Ç) + Future Simple (–ø—Ä–æ–≥–Ω–æ–∑).",
      explanationRu: "–≠—Ç–æ –æ—Ç–ª–∏—á–Ω–æ. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–≤–∏—Ç–∏—é.",
      points: 20
    }
  ];

  const total = scenarios.length;
  const current = currentScenarioIndex + 1;
  const percent = Math.round((current / total) * 100);
  const currentScenario = scenarios[currentScenarioIndex];
  const isLastScenario = currentScenarioIndex === total - 1;

  const handleAnswerSelect = (answer: string) => {
    if (selectedAnswer) return;
    setSelectedAnswer(answer);
    const isCorrect = answer === currentScenario.correctAnswer;
    onAnswer(isCorrect, currentScenario.points, "scenario");
    setShowExplanation(true);
  };

  const handleNextScenario = () => {
    if (isLastScenario) {
      setMeetingComplete(true);
    } else {
      setCurrentScenarioIndex((prev) => prev + 1);
      setSelectedAnswer(null);
      setShowExplanation(false);
      setShowRu(false);
    }
  };

  const handleRestart = () => {
    setCurrentScenarioIndex(0);
    setSelectedAnswer(null);
    setShowExplanation(false);
    setShowRu(false);
    setMeetingComplete(false);
  };

  if (meetingComplete) {
    return (
      <div className="relative z-20 max-w-[1000px] mx-auto rounded-2xl border border-white/10 bg-slate-900/40 backdrop-blur-xl text-white p-6 shadow-[0_12px_40px_rgba(0,0,0,.22)]">
        <div className="flex items-center gap-4 pb-5 border-b border-white/10">
          <div className="w-14 h-14 rounded-full grid place-items-center bg-gradient-to-br from-emerald-400 to-teal-500 text-2xl shadow">ü§ù</div>
          <div>
            <h2 className="text-2xl font-bold">Meeting Complete</h2>
            <p className="text-slate-300">Nice work! You handled client scenarios well.</p>
          </div>
        </div>
        <div className="mt-6 flex gap-3">
          <button onClick={handleRestart} className="px-4 py-2 rounded-lg bg-emerald-600 hover:bg-emerald-500 transition">Try Again</button>
          <button onClick={onBack} className="px-4 py-2 rounded-lg bg-slate-500/80 hover:bg-slate-500 transition">Back to Menu</button>
        </div>
      </div>
    );
  }

  return (
    <div className="relative z-20 max-w-[1000px] mx-auto rounded-2xl border border-white/10 bg-slate-900/40 backdrop-blur-xl text-white p-6 shadow-[0_12px_40px_rgba(0,0,0,.22)]">
      <div className="mb-4">
        <div className="h-2 w-full bg-white/10 rounded-full overflow-hidden">
          <div className="h-full bg-gradient-to-r from-emerald-400 to-teal-400 transition-[width] duration-500" style={{ width: `${percent}%` }} />
        </div>
        <div className="mt-2 flex items-center justify-between text-sm text-slate-300">
          <span>Client Meeting</span>
          <span>Scenario {current} / {total}</span>
        </div>
      </div>

      <div className="p-4 rounded-xl bg-white/5 border border-white/10">
        <div className="flex items-center justify-between">
          <h3 className="font-semibold">What would you say to your client?</h3>
          <button
            type="button"
            onClick={() => setShowRu(v => !v)}
            className="text-xs px-3 py-1 rounded-full bg-white/10 hover:bg-white/20"
          >
            {showRu ? "–°–∫—Ä—ã—Ç—å –ø–µ—Ä–µ–≤–æ–¥" : "–ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥"}
          </button>
        </div>
        <p className="text-slate-200 mt-2">{currentScenario.scenario}</p>
        {showRu && <p className="text-slate-300 mt-2">{currentScenario.scenarioRu}</p>}
      </div>

      <div className="mt-4 grid gap-3 sm:grid-cols-2">
        {currentScenario.options.map((option, idx) => {
          const isSelected = selectedAnswer === option;
          const isCorrect = option === currentScenario.correctAnswer;
          const base = "px-4 py-3 rounded-lg text-left border transition disabled:opacity-90";
          const idle = "bg-white/5 border-white/10 hover:bg-white/10";
          const good = "bg-emerald-500/85 border-emerald-400 text-white";
          const bad = "bg-rose-500/85 border-rose-400 text-white";
          return (
            <button
              key={idx}
              type="button"
              onClick={() => handleAnswerSelect(option)}
              disabled={selectedAnswer !== null}
              className={`${base} ${selectedAnswer ? (isCorrect ? good : isSelected ? bad : "bg-white/5 border-white/10") : idle}`}
            >
              {option}
            </button>
          );
        })}
      </div>

      <div className="mt-4 p-4 rounded-xl bg-white/5 border border-white/10 min-h-[92px]">
        {showExplanation ? (
          <>
            <h4 className="font-semibold mb-1">Tip</h4>
            <p className="text-slate-200">{currentScenario.explanation}</p>
            <p className="text-slate-300 mt-1">{currentScenario.explanationRu}</p>
          </>
        ) : (
          <div className="text-slate-400 text-sm">–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞‚Ä¶</div>
        )}
      </div>

      <div className="mt-6 flex justify-between">
        <button onClick={onBack} className="px-4 py-2 rounded-lg bg-slate-500/80 hover:bg-slate-500 transition">Back to Menu</button>
        {showExplanation && (
          <button
            onClick={handleNextScenario}
            className="px-4 py-2 rounded-lg bg-indigo-600 hover:bg-indigo-500 transition"
          >
            {isLastScenario ? "Finish Meeting" : "Next Scenario"}
          </button>
        )}
      </div>
    </div>
  );
};

export default ClientMeeting;



